{"version":3,"sources":["components/update_event.js","components/home.js","components/add_event.js","App.js","serviceWorker.js","index.js"],"names":["Update_event","props","handlechange","e","setState","category","target","value","axios","get","then","res","total","data","events","console","log","submithandler","preventDefault","state","post","response","success","history","push","catch","err","handlechangeofevents","id","eve","name","eventName","rules","description","starttime","venue","prize","coordinators","handlechangeofdata","nam","val","removerule","idx","filter","s","sidx","rulechange","newrule","map","rule","addrule","removecoordinator","coordinatorchange","newcoordinator","addcoordinator","bind","key","event_name","this","length","index","onSubmit","onChange","className","disabled","selected","type","placeholder","onClick","Component","Home","to","Add_event","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64b142f2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './formstyle.css';\r\nimport axios from 'axios';\r\nclass Update_event extends Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            total:[],\r\n            category:\"\",\r\n            name:\"\",\r\n            rules:[],\r\n            coordinators:[],\r\n            description:\"\",\r\n            venue:\"\",\r\n            prize:\"\"\r\n        }\r\n        this.addrule=this.addrule.bind(this);\r\n        this.removerule=this.removerule.bind(this);\r\n        this.rulechange=this.rulechange.bind(this);\r\n        this.addcoordinator=this.addcoordinator.bind(this);\r\n        this.removecoordinator=this.removecoordinator.bind(this);\r\n        this.coordinatorchange=this.coordinatorchange.bind(this);\r\n        this.submithandler=this.submithandler.bind(this);\r\n        this.handlechange=this.handlechange.bind(this);\r\n        this.handlechangeofdata=this.handlechangeofdata.bind(this);\r\n        this.handlechangeofevents=this.handlechangeofevents.bind(this);\r\n    }\r\n\r\n    handlechange = (e => {\r\n        this.setState({\r\n            category:e.target.value\r\n        })\r\n        axios.get('https://us-central1-confluence19.cloudfunctions.net/api/events?category='+e.target.value)\r\n            .then(res=>{\r\n                    this.setState({\r\n                        total:res.data.data.events  \r\n                    });\r\n                    console.log(res.data.data.events);\r\n            });\r\n        \r\n    })\r\n\r\n    submithandler = (e => {\r\n        e.preventDefault();\r\n        let res = this.state;\r\n        axios.post(\"https://confluence-backend.appspot.com/api/events/desc/\",res)\r\n        .then(response => {\r\n            if(response.data.success)\r\n            {\r\n                this.props.history.push(\"/\");\r\n            }\r\n            console.log(\"post success\", response);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            return err;\r\n        });\r\n        \r\n    })\r\n\r\n    handlechangeofevents=(e=>{\r\n        let id=e.target.value;\r\n        let eve=this.state.total[id];\r\n        this.setState({\r\n            name:eve.eventName,\r\n            rules:[...eve.rules],\r\n            description:eve.description,\r\n            starttime:eve.starttime,\r\n            venue:eve.venue,\r\n            prize:eve.prize,\r\n            coordinators:[... eve.coordinators ]\r\n\r\n        });\r\n    })\r\n\r\n    handlechangeofdata=(e=>{\r\n        let nam=e.target.name;\r\n        let val=e.target.value;\r\n        this.setState({\r\n            [nam]:val\r\n        });\r\n    })\r\n\r\n\r\n    removerule = idx => () => {\r\n        this.setState({\r\n          rules: this.state.rules.filter((s, sidx) => idx !== sidx)\r\n        });\r\n      };\r\n\r\n    rulechange = idx => e => {\r\n        const newrule = this.state.rules.map((rule, sidx) => {\r\n          if (idx !== sidx) return rule;\r\n          return  e.target.value;\r\n        });\r\n    \r\n        this.setState({ rules: newrule });\r\n      };\r\n\r\n    addrule= () => {\r\n        this.setState({\r\n          rules: [...this.state.rules, \"\"]\r\n        });\r\n      };\r\n\r\n      removecoordinator = idx => () => {\r\n        this.setState({\r\n          coordinators: this.state.coordinators.filter((s, sidx) => idx !== sidx)\r\n        });\r\n      };\r\n\r\n    coordinatorchange = idx => e => {\r\n        const newcoordinator = this.state.coordinators.map((rule, sidx) => {\r\n          if (idx !== sidx) return rule;\r\n          return  e.target.value;\r\n        });\r\n    \r\n        this.setState({ coordinators: newcoordinator });\r\n      };\r\n\r\n    addcoordinator= () => {\r\n        this.setState({\r\n          coordinators: [...this.state.coordinators, \"\"]\r\n        });\r\n      };\r\n    render()\r\n    {\r\n\r\n        let category=[\"photography\", \"dance\", \"music\", \"dramatics\", \"informals\", \"arts\",\"literary\",\"oratory\", \"quizzing\", \"hiking and trekking\", \"audio visual\", \"lifestyle\"];\r\n\r\n        let events=category.map((eve, idx)=>{\r\n            return(\r\n                <option key={idx} value={eve}> {eve} </option>\r\n            );\r\n            \r\n        });\r\n\r\n        let event_name=(this.state.total.length)?\r\n                (\r\n                    this.state.total.map((eve, index)=>{\r\n                        return(\r\n                            <option value={index}>{eve.eventName}</option>\r\n                        );                             \r\n                    })\r\n                    \r\n                ):(null)    \r\n\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.submithandler} >\r\n                    <select onChange={this.handlechange} className=\"update_data\"> \r\n                    <option  value=\"\" disabled selected> Select Category </option>\r\n                        {events}\r\n                    </select>\r\n                    <br/>\r\n                    <select onChange={this.handlechangeofevents}>\r\n                    <option  value=\"\" disabled selected> Select Event Name </option>\r\n                        {event_name}\r\n                    </select>\r\n                    <br/>\r\n                    <input \r\n                        type=\"text\"  \r\n                        value={this.state.name} \r\n                        placeholder=\"Event Name\"\r\n                        name=\"name\" \r\n                        onChange={this.handlechangeofdata} \r\n                     />\r\n                     <br/>\r\n                    <textarea \r\n                        value={this.state.description} \r\n                        type=\"text\" \r\n                        placeholder=\"Description\" \r\n                        name=\"description\" \r\n                        onChange={this.handlechangeofdata} \r\n                    />\r\n                    <br/>\r\n                    <h4>Rules</h4>\r\n                    {\r\n                        this.state.rules.map((rule, idx) => (\r\n                        <div className=\"rules\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Write rule here...\"\r\n                                value={rule}\r\n                                onChange={this.rulechange(idx)}\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.removerule(idx)}\r\n                                className=\"del\"\r\n                            >-\r\n                            </button>\r\n                        </div>\r\n                        \r\n                     ))}\r\n                     <button\r\n                        type=\"button\"\r\n                        onClick={this.addrule}\r\n                        className=\"addline\"\r\n                        >\r\n                        Add Rules\r\n                    </button>\r\n                    <br/>\r\n                    <input \r\n                        value={this.state.venue}\r\n                        type=\"text\" \r\n                        placeholder=\"Venue\" \r\n                        name=\"venue\" \r\n                        onChange={this.handlechangeofdata} \r\n                    />\r\n                    <br/>\r\n                        <input \r\n                        value={this.state.prize}\r\n                        type=\"text\" \r\n                        placeholder=\"Prizes\" \r\n                        name=\"prize\" \r\n                        onChange={this.handlechangeofdata} \r\n                    />\r\n                    <br/>\r\n                    <h4>Coordinators</h4>\r\n                    {\r\n                        this.state.coordinators.map((rule, idx) => (\r\n                        <div className=\"rules\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name(Phone Number)\"\r\n                                value={rule}\r\n                                onChange={this.coordinatorchange(idx)}\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.removecoordinator(idx)}\r\n                                className=\"del\"\r\n                            >-\r\n                            </button>\r\n                        </div>\r\n                        \r\n                     ))}\r\n                     <button\r\n                        type=\"button\"\r\n                        onClick={this.addcoordinator}\r\n                        className=\"addline\"\r\n                        >\r\n                        Add Coordinator\r\n                    </button>\r\n                    <br/>\r\n\r\n                    <input type=\"submit\" className= \"submit_type\" value=\"Submit\" onClick={this.submithandler}/>\r\n                 </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Update_event; ","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';  \r\nimport Update_event from './update_event';\r\nimport './home.css';\r\nclass Home extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n    \r\n    \r\n    render()\r\n    {\r\n        return(\r\n\r\n            <div>\r\n                <Link to=\"/add_event\">\r\n                    <button className=\"adddd\">\r\n                        Add Event\r\n                    </button>\r\n                </Link>\r\n                <br/>\r\n                <Link to=\"/update_event\">\r\n                    <button className=\"adddd\">\r\n                        Update Event\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport './formstyle.css';\r\n\r\nclass Add_event extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            category:\"\",\r\n            name:\"\",\r\n            rules:[],\r\n            coordinators:[],\r\n            description:\"\",\r\n            venue:\"\",\r\n            prize:\"\"\r\n        }\r\n        this.addrule=this.addrule.bind(this);\r\n        this.removerule=this.removerule.bind(this);\r\n        this.rulechange=this.rulechange.bind(this);\r\n        this.addcoordinator=this.addcoordinator.bind(this);\r\n        this.removecoordinator=this.removecoordinator.bind(this);\r\n        this.coordinatorchange=this.coordinatorchange.bind(this);\r\n        this.submithandler=this.submithandler.bind(this);\r\n        this.handlechange=this.handlechange.bind(this);\r\n        this.handlechangeofdata=this.handlechangeofdata.bind(this);\r\n    }\r\n\r\n    handlechange = (e => {\r\n        this.setState({\r\n            category:e.target.value\r\n        })\r\n    })\r\n\r\n    submithandler = (e => {\r\n        e.preventDefault();\r\n        let res = this.state;\r\n        axios.post(\"https://confluence-backend.appspot.com/api/events/desc/\",res)\r\n        .then(response => {\r\n            if(response.data.success)\r\n            {\r\n                this.props.history.push(\"/\");\r\n            }\r\n            console.log(\"post success\", response);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            return err;\r\n        });\r\n        \r\n    })\r\n\r\n    handlechangeofdata=(e=>{\r\n        let nam=e.target.name;\r\n        let val=e.target.value;\r\n        this.setState({\r\n            [nam]:val\r\n        });\r\n    })\r\n\r\n\r\n    removerule = idx => () => {\r\n        this.setState({\r\n          rules: this.state.rules.filter((s, sidx) => idx !== sidx)\r\n        });\r\n      };\r\n\r\n    rulechange = idx => e => {\r\n        const newrule = this.state.rules.map((rule, sidx) => {\r\n          if (idx !== sidx) return rule;\r\n          return  e.target.value;\r\n        });\r\n    \r\n        this.setState({ rules: newrule });\r\n      };\r\n\r\n    addrule= () => {\r\n        this.setState({\r\n          rules: [...this.state.rules, \"\"]\r\n        });\r\n      };\r\n\r\n      removecoordinator = idx => () => {\r\n        this.setState({\r\n          coordinators: this.state.coordinators.filter((s, sidx) => idx !== sidx)\r\n        });\r\n      };\r\n\r\n    coordinatorchange = idx => e => {\r\n        const newcoordinator = this.state.coordinators.map((rule, sidx) => {\r\n          if (idx !== sidx) return rule;\r\n          return  e.target.value;\r\n        });\r\n    \r\n        this.setState({ coordinators: newcoordinator });\r\n      };\r\n\r\n    addcoordinator= () => {\r\n        this.setState({\r\n          coordinators: [...this.state.coordinators, \"\"]\r\n        });\r\n      };\r\n    render()\r\n    {\r\n\r\n        let category=[\"photography\", \"dance\", \"music\", \"dramatics\", \"informals\", \"arts\",\"literary\",\"oratory\", \"quizzing\", \"hiking and trekking\", \"audio visual\", \"lifestyle\"];\r\n\r\n        let events=category.map((eve, idx)=>{\r\n            return(\r\n                <option key={idx} value={eve}> {eve} </option>\r\n            );\r\n            \r\n        });  \r\n\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.submithandler} >\r\n                    <select onChange={this.handlechange} className=\"update_data\"> \r\n                    <option  value=\"\" disabled selected> Select Category </option>\r\n                        {events}\r\n                    </select>\r\n                    <br/>\r\n                    <input \r\n                        type=\"text\"  \r\n                        value={this.state.name} \r\n                        placeholder=\"Event Name\"\r\n                        name=\"name\" \r\n                        onChange={this.handlechangeofdata} \r\n                     />\r\n                     <br/>\r\n                    <textarea \r\n                        value={this.state.description} \r\n                        type=\"text\" \r\n                        placeholder=\"Description\" \r\n                        name=\"description\" \r\n                        onChange={this.handlechangeofdata} \r\n                    />\r\n                    <br/>\r\n                    <h4>Rules</h4>\r\n                    {\r\n                        this.state.rules.map((rule, idx) => (\r\n                        <div className=\"rules\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Write rule here...\"\r\n                                value={rule}\r\n                                onChange={this.rulechange(idx)}\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.removerule(idx)}\r\n                                className=\"del\"\r\n                            >-\r\n                            </button>\r\n                        </div>\r\n                        \r\n                     ))}\r\n                     <button\r\n                        type=\"button\"\r\n                        onClick={this.addrule}\r\n                        className=\"addline\"\r\n                        >\r\n                        Add Rules\r\n                    </button>\r\n                    <br/>\r\n                    <input \r\n                        value={this.state.venue}\r\n                        type=\"text\" \r\n                        placeholder=\"Venue\" \r\n                        name=\"venue\" \r\n                        onChange={this.handlechangeofdata} \r\n                    />\r\n                    <br/>\r\n                        <input \r\n                        value={this.state.prize}\r\n                        type=\"text\" \r\n                        placeholder=\"Prizes\" \r\n                        name=\"prize\" \r\n                        onChange={this.handlechangeofdata} \r\n                    />\r\n                    <br/>\r\n                    <h4>Coordinators</h4>\r\n                    {\r\n                        this.state.coordinators.map((rule, idx) => (\r\n                        <div className=\"rules\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Name(Phone Number)\"\r\n                                value={rule}\r\n                                onChange={this.coordinatorchange(idx)}\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.removecoordinator(idx)}\r\n                                className=\"del\"\r\n                            >-\r\n                            </button>\r\n                        </div>\r\n                        \r\n                     ))}\r\n                     <button\r\n                        type=\"button\"\r\n                        onClick={this.addcoordinator}\r\n                        className=\"addline\"\r\n                        >\r\n                        Add Coordinator\r\n                    </button>\r\n                    <br/>\r\n\r\n                    <input type=\"submit\" className= \"submit_type\" value=\"Submit\" onClick={this.submithandler}/>\r\n                 </form>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Add_event; ","import React from 'react';\nimport {Switch, BrowserRouter, Route,Link} from 'react-router-dom';\nimport Home from './components/home';\nimport Add_event from './components/add_event';\nimport Update_event from './components/update_event'; \nfunction App() {\n  return (\n    <BrowserRouter>\n        <div className=\"App\">\n          <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path=\"/update_event\" component={Update_event}/>\n              <Route exact path=\"/add_event\" component={Add_event}/>\n\n            </Switch>      \n        </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}